---
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import HeroSection from '../components/HeroSection.astro';

const team = [
	
	{
		title: "Jose Alejandro Rosero Rodríguez",
		description: {
		  texto: "",
		  ocupacion: "Estudiante de Ingeniería Mecatrónica",
		  lugar: "de la facultad de Ingeniería Universidad Nacional de Colombia Sede Bogotá",
		},
		backTitle: "",
		backDescription: "Encargado de página web y herramientas de software",
		image: "https://imgur.com/uQk0L5v.png",
		color: "primary"
	},
	{
	    title: "Alejandro Bernal Rubiano",
	    description: {
	      texto: "",
	      ocupacion: "Estudiante de Ingeniería Mecatrónica",
	      lugar: "de la facultad de Ingeniería Universidad Nacional de Colombia Sede Bogotá",
	    },
	    backTitle: "",
	    backDescription: "Encargado de simulación de fábrica",
	    image: "https://imgur.com/TINWDX1.png",
	    color: "primary"
	  },
	{
	    title: "Nicolás Mateo Guio Maestre",
	    description: {
	      texto: "",
	      ocupacion: "Estudiante de Ingeniería Mecatrónica",
	      lugar: "de la facultad de Ingeniería Universidad Nacional de Colombia Sede Bogotá",
	    },
	    backTitle: "",
	    backDescription: "Encargado de la parte económica",
	    image: "https://imgur.com/pX57IiL.png",
	    color: "primary"
	  },
	{
	    title: "Juan Diego Tovar Cárdenas",
	    description: {
	      texto: "",
	      ocupacion: "Estudiante de Ingeniería Mecatrónica",
	      lugar: "de la facultad de Ingeniería Universidad Nacional de Colombia Sede Bogotá",
	    },
	    backTitle: "",
	    backDescription: "Encargado de diseño de celdas",
	    image: "https://imgur.com/lqfMkfY.png",
	    color: "primary"
	  },
];
---

<Layout title="Los 4 automáticos | Asignatura" description="Proyecto Los 4 Automáticos - UNAL 2025-S2 - Proyecto integrador de fabricación de motorreductores sin sin corona, cónicos y helicoidales">
  <Header />
  <main>
    <HeroSection 
      title="Equipo de Los 4 Automáticos" 
      highlightText="4"
      description=""
    />

    
    <section class="section relative z-10 overflow-hidden py-12 md:py-16 bg-white dark:bg-gray-800">
      <div class="container-custom">
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 gap-6 md:gap-8">
          
          <!-- Tarjetas 3D del equipo -->
          {team.map((person) => (
            <div class="feature-card perspective">
              <div class="relative h-full transform-gpu transition-all duration-700 preserve-3d hover:rotate-y-180 cursor-pointer touch-action-card">

                {/* Cara frontal */}
                <div class="absolute inset-0 backface-hidden">
                  <div class="card p-6 md:p-8 h-full flex flex-col items-center justify-center text-center">
                    <div class={`w-38 h-38 mx-auto mb-6 rounded-full overflow-hidden border-4 border-${person.color}-200 dark:border-${person.color}-800`}>
                      <img src={person.image} alt={person.title} class="w-full h-full object-cover" />
                    </div>
                    <h3 class="text-xl font-semibold mb-3 text-gray-900 dark:text-white">{person.title}</h3>
                    <div class="text-sm text-gray-600 dark:text-gray-300 space-y-1">
                      <p>{person.description.ocupacion}</p>
                      <p>{person.description.lugar}</p>
                      <p>{person.description.texto}</p>
                    </div>
                  </div>
                </div>

                {/* Cara trasera */}
                <div class="absolute inset-0 backface-hidden rotate-y-180">
                  <div class="card p-6 md:p-8 h-full bg-primary-600 dark:bg-primary-800 text-white flex flex-col items-center justify-center text-center">
                    <h3 class="text-xl font-semibold mb-4">{person.backTitle}</h3>
                    <p class="text-base m-2">{person.backDescription}</p>
                  </div>
                </div>

              </div>
            </div>
          ))}

        </div>
      </div>
    </section>

  </main>
  <Footer />
</Layout> 

<style>
 /* 3D Card Transformations */
  .perspective {
    perspective: 1000px;
  }

  .preserve-3d {
    transform-style: preserve-3d;
    /* Se mantiene min-height para evitar problemas en móvil */
    min-height: 400px;
  }

  .backface-hidden {
    backface-visibility: hidden;
  }

  .rotate-y-180 {
    transform: rotateY(180deg);
  }

  /* Touch device support for 3D cards */
  @media (hover: none) {
    .touch-action-card {
      transition: transform 0.5s ease;
    }
    
    /* Espaciado entre tarjetas en móvil */
    .feature-card.perspective {
      margin-bottom: 2.5rem;
    }
    
    /* Sombra para tarjetas en móvil */
    .feature-card.perspective .card {
      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1),
                  0 2px 4px -1px rgba(0, 0, 0, 0.06);
    }
  }

  /* Asegurar altura y posicionamiento de las tarjetas en móvil */
  @media (max-width: 640px) {
    .feature-card {
      position: relative;
      min-height: 280px;
      margin-bottom: 2rem;
      clear: both;
      display: block;
    }
    
    .card {
      height: 100%;
      position: relative;
      overflow: visible;
    }
  }

</style>

<script>
  // Store references to event listeners for cleanup
  const cleanupFunctions: Array<() => void> = [];

  // Function to initialize only 3D interactive cards
  function initializeFeatures() {
    initializeTouchCards();
  }

  // Add touch support for 3D cards
  function initializeTouchCards() {
    const cards = document.querySelectorAll('.feature-card.perspective');

    cards.forEach(card => {
      const cardInner = card.querySelector('.preserve-3d');

      if (cardInner) {
        const handleClick = () => {
          if (window.matchMedia('(hover: none)').matches) {
            cardInner.classList.toggle('rotate-y-180');
          }
        };

        cardInner.addEventListener('click', handleClick);

        // Add cleanup function
        cleanupFunctions.push(() => {
          cardInner.removeEventListener('click', handleClick);
        });
      }
    });
  }

  // Initialize on initial load
  document.addEventListener('DOMContentLoaded', initializeFeatures);

  // Re-initialize on Astro page transitions
  document.addEventListener('astro:page-load', initializeFeatures);

  // Cleanup on Astro page swap
  document.addEventListener('astro:before-swap', () => {
    cleanupFunctions.forEach(cleanup => cleanup());
    cleanupFunctions.length = 0;
  });

  // Fallback cleanup on window unload
  window.addEventListener('unload', () => {
    cleanupFunctions.forEach(cleanup => cleanup());
  });
</script>

